# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  name: 'default'
  demands:
    - agent.name -equals AgentSelfHosted

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# Step 1: Install NuGet tool
- task: NuGetToolInstaller@1

# Step 2: Restore NuGet packages
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# Step 3: Build the project
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Step 4: Run tests (optional)
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Step 5: Publish the build artifact (WebApp.zip)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)\WebApp.zip'
    ArtifactName: 'lab4-agile-feed'
    publishLocation: 'Container'

# Release Pipeline (Deploy to IIS or another target environment)
# This step will be triggered by the release pipeline and can be set up in the release UI.
- stage: DeployToIIS
  jobs:
  - job: IISDeployment
    pool:
      name: 'default'
      demands:
        - agent.name -equals AgentSelfHosted
    steps:
    - task: IISWebAppDeploy@0
      inputs:
        WebAppName: 'MVCAgile_ProcessWith_Agile'
        Package: '$(Pipeline.Workspace)/_WebAppArtifact/WebApp.zip'
        IISWebSiteName: 'Default Web Site'
        RemoveAdditionalFiles: true
        SetParametersFile: '$(Build.SourcesDirectory)/SetParameters.xml'
